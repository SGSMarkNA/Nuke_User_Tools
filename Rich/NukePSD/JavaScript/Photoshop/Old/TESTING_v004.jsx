// =======================================================
// Check for the OS we're on...
os = $.os.toLowerCase().indexOf('mac') >= 0 ? "MAC": "WINDOWS";
//alert(os);

// =======================================================
// Where to find various files on the server:
// Path to server...
var libPath = $.getenv("AW_COMMON_UTILITIES");
// Path to Color Settings...
var ColorSettingsPath = (libPath + "/Photoshop/AW_Nuke_Tools/Color_Settings");
// Color settings files...
var ACES_SETTINGS = (ColorSettingsPath + "/ACES-CG-Linear_NO_PROFILE_PROMPTS.csf" );
var sRGB_SETTINGS = (ColorSettingsPath + "/sRGB.csf" );

// =======================================================
// Data file, generated by python script:
if(os == "WINDOWS")
	//var DataFile = new File($.getenv("TEMP") + "\\" + ".nuke\\NukePSD\\NukePSD_Data.txt");
	var DataFile = new File('D:\\rbobo\\Dropbox\\richbobo\\NUKE\\Scripts\\Save_PSD_From_Nuke_TESTING\\img\\PNG\\NukePSD_Data.txt');
else if (os == "MAC")
	//var DataFile = new File($.getenv("HOME") + "/" + ".nuke/NukePSD/NukePSD_Data.txt");
	var DataFile = new File('/Users/richbobo/Dropbox/richbobo/NUKE/Scripts/Save_PSD_From_Nuke_TESTING/img/PNG/NukePSD_Data.txt');
//alert(DataFile);
// Open and read lines from the data file which assign script variables...
DataFile.open('r');
var str = "";
while (!DataFile.eof){
	str = DataFile.readln() + "\n";
	//alert(str);
	eval(str);
}
DataFile.close();
///////////////////////////////////////
//alert("PNG_FOLDER -->" + PNG_FOLDER);
//alert(LAYER_FOLDERS);
//alert("PSD_FileName -->" + PSD_FileName);
//alert("NUKE_FRAME -->" + NUKE_FRAME);
//alert("NUM_FRAMES -->" + NUM_FRAMES);
//var PSDName = (PSD_FileName + "_" + NUKE_FRAME);
//alert("PSDName -->" + PSDName);
//alert("FIRST_FRAME -->" + FIRST_FRAME);
//alert("LAST_FRAME -->" + LAST_FRAME);






// =======================================================
function png_to_psd (layer_path,LAYER_FOLDERS,IMAGES,prefs,PSD_FileName){
	// Check if there are any pngs... if not, exit.
	if (IMAGES.length == 0) {return 0}
	
	// Create a new document...
	var newDoc = documents.add(300, 300, 72, 'Imported Layers', NewDocumentMode.RGB, DocumentFill.TRANSPARENT, 1);
	var newLayer = newDoc.activeLayer;
	var pnglayers = new Array (); // Array for holding layer info...

	// Loop through all files in the source folder...
	for (var i = 0; i < IMAGES.length; i++) {
		// open document
		var doc = open(IMAGES[i]);

		// Get document name and remove file extension...
		var name = doc.name;
		if (prefs.removeFileExtensions) {
			name = name.replace(/(?:\.[^.]*$|$)/, '');
		}

		// Convert to RGB; convert to 8-bpc; merge visible...
		doc.changeMode(ChangeMode.RGB);
		doc.bitsPerChannel = BitsPerChannelType.EIGHT;
		doc.artLayers.add();
		doc.mergeVisibleLayers();

		// Rename layer; duplicate to new document...
		var layer = doc.activeLayer;
		layer.name = name;
		layer.duplicate(newDoc, ElementPlacement.PLACEATBEGINNING);
		
		// Add layer name to  list...
		var namesplit = (name.split("_")); // Seperate file name into an array...
		pnglayers.push(namesplit.join("_")); // Add layer name to pnglayers...

		// Close imported document...
		doc.close(SaveOptions.DONOTSAVECHANGES);
	}	

	// Reveal and trim to fit all layers...
	newDoc.revealAll();
	newDoc.trim(TrimType.TRANSPARENT, true, true, true, true);
	
	var PixCount = newDoc.width.as('px') * newDoc.height.as('px');
	var layers = activeDocument.artLayers;
	var groups = activeDocument.layerSets;

	if (layers.length > 1){layers.getByName("Layer 1").remove()};
	
	// =======================================================
	// This takes the list of LAYER_FOLDERS we got from the DataFile and rearranges the order of the photoshop layers to match...
	//// Will need to change this to reflect fact that padded image layer names won't match the LAYER_FOLDERS names!
	for (var i = 0; i < LAYER_FOLDERS.length; i++) {
		///alert(LAYER_FOLDERS[i]);
		layer = layers.getByName(LAYER_FOLDERS[i]);
		layer.move(newDoc, ElementPlacement.PLACEATBEGINNING);
	}
	// =======================================================

	// Save file and close...
	///////////////////////////////////////////////////////////////////////////
	// Need to combine --> PSD_FileName + "_" + current-frame-number  <---
	///////////////////////////////////////////////////////////////////////////
	saveName = new File(PSDName + ".psd");
	alert(saveName);
	newDoc.saveAs(saveName, new PhotoshopSaveOptions() );
	newDoc.close();

	return saveName
	}

// =======================================================
function single_psd (layer_path,PSD_FileName,IMAGES){
	// user settings
	var prefs = new Object();
	prefs.sourceFolder         = layer_path;  // runs
	prefs.removeFileExtensions = true; // remove filename extensions for imported layers (default: true)
	prefs.savePrompt           = false; // display save prompt after import is complete (default: false)
	prefs.closeAfterSave       = false; // close import document after saving (default: false)

	// get a list of files
	//var fileArray = png_loop(layer_path)
	//alert ("fileArray -->" + fileArray);
	
	// assemble pngs to psd
	saveName = png_to_psd(layer_path,LAYER_FOLDERS,IMAGES,prefs,PSD_FileName)
    alert("saveName -->" + saveName);
	
	return saveName
	}

// =======================================================
function main() {

    INDEX = (FIRST_FRAME.split(".")[0]);
    INDEX = (INDEX.split("_"));
    INDEX = (INDEX [INDEX.length -1]);
    alert(INDEX);

    for (var i=0; i < NUM_FRAMES; i++) {
        
        var IMAGES = [];
        alert("IMAGES --> " + IMAGES);

        for (var j=0; j < LAYER_FOLDERS.length; j++) {
            
            if (LAYER_FOLDERS[j]) {
                var layerfolder = LAYER_FOLDERS[j];
                alert("layerfolder --> " + layerfolder);
                
                var layer_path = PNG_FOLDER + '/' + layerfolder;
                alert("layer_path --> " + layer_path);
                
                var image = layer_path + '/' + layerfolder + INDEX + '.png';
                IMAGES.push(image);
                alert(IMAGES);
            }
        single_psd(layer_path,PSD_FileName,IMAGES)
    }
    return 0
    }
}

main()